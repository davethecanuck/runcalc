{"version":3,"sources":["controls/ActionButton.js","components/PageHeader.js","components/Content.js","components/Footer.js","pages/user_profile/UserProfile.js","controls/Select.js","controls/Checkbox.js","controls/Button.js","controls/Controls.js","controls/Input.js","controls/RadioGroup.js","components/Popup.js","components/Notification.js","components/useForm.js","calc/distance.js","calc/Race.js","pages/history/AddRaceForm.js","components/useTable.js","services/pastRaces.js","pages/history/History.js","calc/predict.js","pages/predict/RacePredictions.js","pages/charts/Charts.js","app/App.js","index.js"],"names":["useStyles","makeStyles","theme","root","minWidth","margin","spacing","secondary","backgroundColor","palette","light","color","main","primary","ActionButton","props","children","onClick","classes","Button","className","pageHeader","padding","display","marginBottom","alignItems","pageTitle","paddingLeft","paddingRight","opacity","PageHeader","title","icon","Paper","elevation","square","HelpOutlineRounded","Typography","variant","component","Content","pages","currentPage","content","header","forEach","p","page","longTitle","contentStyles","pageContent","fabButton","left","right","position","bottom","top","justifyContent","iconButtonLabel","flexDirection","fontSize","Footer","setCurrentPage","AppBar","Toolbar","Grid","container","map","item","IconButton","label","UserProfile","Select","name","value","error","onChange","options","FormControl","FormLabel","MenuItem","id","FormHelperText","Checkbox","FormControlLabel","control","checked","e","target","convertToDefaultParam","textTransform","Controls","Input","other","TextField","helperText","RadioGroup","items","row","Radio","text","size","dialogWrapper","dialogTitle","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","Snackbar","isOpen","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","event","reason","Alert","severity","type","message","width","Form","autoComplete","DISTANCES","distance","SELECT_OPTIONS","NAME_BY_DISTANCE","reduce","obj","Race","race","Object","assign","this","recalcFields","distanceName","timeParts","getTimeParts","length","unshift","time","getTime","hhmmss","getHHMMSS","Math","floor","toHHMMSS","timeString","hours","minutes","seconds","toString","padStart","adjust","log2","ratio","FIELD","pattern","RegExp","help","initVal","initialFValues","keys","key","AddRaceForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","check","test","setErrors","every","x","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","parsedTime","exec","push","parseInt","parseFormToRace","xs","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblHead","TableHead","TableRow","f","TableCell","sortDirection","disableSort","TableSortLabel","active","direction","cellId","TblContainer","Table","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","KEYS","getPastRaces","pastRaces","localStorage","getItem","JSON","stringify","setItem","rawData","parse","results","insertPastRace","data","Date","now","addButton","Fab","aria-label","AddOutlined","History","historyService","setRecords","setRecordForEdit","onDelete","filter","TableBody","openInPopup","EditOutlined","idx","findIndex","getRacePredictions","targetRaces","totalTime","totalWeight","pastRace","predictTime","weight","targetRace","RacePredictions","predictCalc","getPaceString","Charts","createMuiTheme","background","default","shape","borderRadius","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","PermIdentityOutlined","HistoryOutlined","DirectionsRunOutlined","ShowChartOutlined","withStyles","appMain","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46a90c37.chunk.js","sourcesContent":["import { Button, makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 0,\n    margin: theme.spacing(0.5)\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.light,\n    '& .MuiButton-label': {\n      color: theme.palette.secondary.main,\n    }\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.light,\n    '& .MuiButton-label': {\n      color: theme.palette.primary.main,\n    }\n  },\n}))\n\nfunction ActionButton(props) {\n  const {color, children, onClick} = props\n  const classes = useStyles()\n\n  // color is either 'primary' or 'secondary' (passed in from user)\n  // so the classes resolves to the CSS rule above for the given color.\n  // We could extend the css to include any other colors (e.g. tertiary)\n  // we want.\n  return (\n    <Button\n      onClick={onClick}\n      className={`${classes.root} ${classes[color]}`}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default ActionButton;","import { makeStyles, Paper, Typography } from '@material-ui/core';\nimport { HelpOutlineRounded } from '@material-ui/icons';\nimport React from 'react';\nimport ActionButton from '../controls/ActionButton';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiPaper-root': {\n      //backgroundColor: '#fdfdff',\n      backgroundColor: '#fdfdff',\n    }\n  },\n  pageHeader: {\n    padding: theme.spacing(0),\n    display: 'flex',\n    marginBottom: theme.spacing(0),\n    alignItems: 'center',\n  },\n  pageTitle: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n\n    // Change opacity of subtitle\n    '& .MuiTypography-subtitle2': {    // Inspect to get element name\n      opacity: 0.6,\n    }\n  }\n}));\n\nexport default function PageHeader(props) {\n  const classes = useStyles();\n  const {title, icon} = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={1} square>\n        <div className={classes.pageHeader}>\n          <ActionButton>\n            <HelpOutlineRounded color=\"secondary\"/>\n          </ActionButton>\n          <div className={classes.pageTitle}>\n            <Typography variant=\"h6\" component=\"div\">\n              {title}\n            </Typography>\n          </div>\n          {icon}\n        </div>\n      </Paper>\n    </div>\n  );\n}","import { makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport PageHeader from './PageHeader'\n\n// Opens current page content\nexport default function Content(props) {\n  const { pages, currentPage } = props\n\n  // Find the page that is currently set to be open\n  let content = null\n  let header = null\n\n  pages.forEach((p) => {\n    // Using title as an id\n    if (p.title === currentPage) {\n      content = p.page\n      header = (\n        <PageHeader\n          title={p.longTitle}\n          icon={p.icon}\n        />\n      )\n    }\n  })\n  \n  return (\n    <div>\n      {header}\n      {content}\n    </div>\n  );\n}\n\n// Common CSS for page content\nexport const contentStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(16),  // Stay above footer and FAB\n    padding: theme.spacing(1),\n  },\n  fabButton: {\n    left: 'auto',\n    right: theme.spacing(1),\n    position: 'fixed',\n\n    // Floating button at top\n    //top: theme.spacing(9),\n    //bottom: 'auto',\n\n    // Floating button at bottom\n    bottom: theme.spacing(9),\n    top: 'auto',\n  },\n}))\n","import React from 'react'\nimport {AppBar, Toolbar, Grid, makeStyles, IconButton} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  // 'root' overrides the default corresponding class from Material UI.\n  // - root is the outermost class for the AppBar element (and other MUI components)\n  // - use inspect of final rendered page to verify\n  root: {\n    backgroundColor: '#fff',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    top: 'auto',\n    bottom: 0,\n  },\n  iconButtonLabel: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 'medium',\n  },\n}));\n\nconst Footer = (props) => {\n  const classes = useStyles(props);\n  const {pages, setCurrentPage} = props;\n\n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar>\n        <Grid container alignItems=\"center\">\n          {\n            pages.map((p) => (\n              <Grid item> \n                <IconButton classes={{label: classes.iconButtonLabel}}\n                  onClick={() => { setCurrentPage(p.title) }}\n                >\n                  {p.icon}\n                  <label> {p.title} </label>\n                </IconButton>\n              </Grid>\n            ))\n          }\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport {Paper} from '@material-ui/core'\nimport {contentStyles} from '../../components/Content'\n\nfunction UserProfile(props) {\n  const classes = contentStyles()\n\n  return (\n    <div>\n      <Paper className={classes.pageContent}>\n        <div> TBD User Profile Content </div>\n      </Paper>\n    </div>\n  )\n}\n\nexport default UserProfile;","import { FormControl, FormHelperText, FormLabel, MenuItem,\n  Select as MuiSelect } from '@material-ui/core';\nimport React from 'react';\n\nfunction Select(props) {\n  const {name, label, value, error=null, onChange, options} = props;\n\n  return (\n    <FormControl variant=\"outlined\" {...(error && { error:true })}>\n      <FormLabel> {label} </FormLabel>\n      <MuiSelect\n        label={label}\n        name={name}\n        value={value}\n        onChange={onChange}\n      >\n        <MenuItem value=\"\"> None </MenuItem> \n        {\n          options.map(\n            item => (\n              <MenuItem key={item.id} value={item.id}> \n                {item.title} \n              </MenuItem>\n            )\n          )\n        }\n      </MuiSelect>\n      {error && <FormHelperText> {error} </FormHelperText>}\n    </FormControl>\n  );\n}\n\nexport default Select;","import { Checkbox as MuiCheckbox, FormControl, FormControlLabel } \n  from '@material-ui/core';\nimport React from 'react';\n\n// Helper function for checkboxes. There is not a value parameter like\n// other input types (for onChange/handleInputChange) so this function will\n// convert the checkbox params to match the others.\nconst convertToDefaultParam = (name,value) => ({\n  target: {\n    name, value    // Same as name:name, value:value\n  }\n})\n\nfunction Checkbox(props) {\n  const {name, label, value, onChange} = props;\n\n  return (\n    <FormControl>\n      <FormControlLabel\n        label={label}\n        control={ \n          <MuiCheckbox \n            name={name}\n            checked={value}\n            onChange={e => onChange(convertToDefaultParam(name, e.target.checked))}\n            color=\"primary\"\n          /> \n        }\n      />\n    </FormControl>\n  );\n}\n\nexport default Checkbox;","import React from 'react';\nimport { Button as MuiButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(0.5),\n  },\n  label: {\n    textTransform: \"none\",\n  }\n}))\n\nfunction Button(props) {\n  const { text, size, color, variant, onClick, ...other } = props;\n  const classes = useStyles();\n\n  // Define default values for the button using {value || default}.\n  // ...other allows any other property to be passed in (e.g. type=\"submit\")\n  return (\n    <MuiButton\n      variant={variant || \"contained\"}\n      size={size || \"large\"}\n      color={color || \"primary\"}\n      onClick={onClick}\n      {...other}\n      classes={{root:classes.root, label:classes.label}}\n    >\n      {text}\n    </MuiButton>\n  );\n}\n\nexport default Button;","import Input from './Input';\nimport RadioGroup from './RadioGroup';\nimport Select from './Select';\nimport Checkbox from './Checkbox';\nimport Button from './Button';\nimport ActionButton from './ActionButton';\n\n// This exists to create a namespace separate from the equivalent\n// MUI components. \nconst Controls = {\n    Input, \n    RadioGroup,\n    Select,\n    Checkbox,\n    Button,\n    ActionButton,\n}\n\nexport default Controls;","import { TextField } from '@material-ui/core';\nimport React from 'react';\n\nexport default function Input(props) {\n    const {name, label, value, error=null, onChange, ...other} = props;\n\n    // If error set, return error/helperText object\n    return (\n        <TextField\n            variant=\"outlined\" \n            name={name}\n            label={label}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && { error:true, helperText:error })}\n        />\n    );\n}","import React from 'react';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup as MuiRadioGroup,\n  Radio } from '@material-ui/core';\n\n// NOTE: We are deliberately using RadioGroup as the name so we can\n// can show how to resolve namespace issues using Controls.js\nexport default function RadioGroup(props) {\n  const { name, label, value, onChange, items } = props;\n\n  return (\n    <FormControl>\n      <FormLabel> {label} </FormLabel>\n      <MuiRadioGroup row\n        name={name}\n        value={value}\n        onChange={onChange}\n      >\n        {\n          items.map(\n            (item) => (\n              <FormControlLabel \n                key={item.id}\n                label={item.title} \n                value={item.id} \n                control={<Radio/>} \n              />\n            )\n          )\n        }\n      </MuiRadioGroup>\n    </FormControl>\n  );\n}","import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } \n  from '@material-ui/core';\nimport React from 'react';\nimport Controls from '../controls/Controls'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  dialogWrapper: {\n    padding: theme.spacing(2),\n    position: \"absolute\",\n    top: theme.spacing(5),\n  },\n  dialogTitle: {\n    paddingRight: 0,\n  }\n}))\n\nfunction Popup(props) {\n  const {title, children, openPopup, setOpenPopup} = props\n  const classes = useStyles()\n\n  return (\n    <Dialog \n      open={openPopup} \n      maxWidth=\"md\" \n      classes={{paper: classes.dialogWrapper}}\n    >\n      <DialogTitle className={classes.dialogTitle}>\n        <div style={{display: \"flex\"}}>\n          <Typography variant=\"h6\" component=\"div\" style={{flexGrow: 1}}>\n            {title}\n          </Typography>\n          <Controls.ActionButton \n            color=\"secondary\" \n            onClick={() => setOpenPopup(false)}\n          >\n            <CloseIcon />\n          </Controls.ActionButton>\n        </div>\n      </DialogTitle>\n      <DialogContent dividers>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default Popup;","import { makeStyles, Snackbar} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    top: theme.spacing(9)\n  }\n}))\n\nfunction Notification(props) {\n  const { notify, setNotify } = props\n  const classes = useStyles()\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    else {\n      setNotify({\n        ...notify,\n        isOpen:false\n      })\n    }\n  }\n\n  return (\n    <Snackbar className={classes.root}\n      open={notify.isOpen}\n      autoHideDuration={3000}\n      anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n      onClose={handleClose}\n    >\n      <Alert\n        severity={notify.type}\n      >\n        {notify.message}\n      </Alert>\n\n    </Snackbar>\n  );\n}\n\nexport default Notification;","import { makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\n\n// This is a generic form that can be used for creating different \n// forms with different initialFValues. We can create consistent handlers\n// here and styling\nexport function useForm(initialFValues, validateOnChange=false, validate) {\n  const [ values, setValues ] = useState(initialFValues);\n  const [ errors, setErrors ] = useState({});\n\n  const handleInputChange = e => {\n    const {name, value} = e.target;\n    setValues({       // Uses the setValues hook from above\n      ...values,      // Copies all of the incoming values from the hook above\n      [name]:value,   // Sets the value property of the given input name\n    })\n\n    if (validateOnChange) {\n      validate({[name]:value});\n    }\n  }\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  }\n\n  return {\n    values, \n    setValues, \n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // Inspect tells us the class for the form control.\n    // The & refers to the parent (root)\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1),\n    }\n  }\n}))\n\nexport function Form(props) {\n  // props.children contains all of the html children of the <Form> element\n  // ...other are all of the other properties we may pass in, such as onSubmit\n  const classes = useStyles();\n  const {children, ...other} = props;\n\n  return (\n    <form className={classes.root} autoComplete=\"off\" {...other}>\n      {children}\n    </form>\n  );\n}","// 800m is the minimum distance where the model barely works, \n// and 1500m is probably closer to reality for predictiveness\nconst DISTANCES = [\n  { name: \"800m\", distance: 800 },\n  { name: \"1km\", distance: 1000 },\n  { name: \"1500m\", distance: 1500 },\n  { name: \"1600m\", distance: 1600 },\n  { name: \"1 mile\", distance: 1609 },\n  { name: \"3000m\", distance: 3000 },\n  { name: \"2 mile\", distance: 3219 },\n  { name: \"5km\", distance: 5000 },\n  { name: \"8km\", distance: 8000 },\n  { name: \"5 mile\", distance: 8047 },\n  { name: \"10km\", distance: 10000 },\n  { name: \"15km\", distance: 15000 },\n  { name: \"20km\", distance: 20000 },\n  { name: \"13.1 mile\", distance: 21097 },\n  { name: \"26.2 mile\", distance: 42195 },\n  { name: \"50km\", distance: 50000 }\n]\n\nconst SELECT_OPTIONS = DISTANCES.map((row) => {\n  return { title: row.name, id: row.distance }\n})\n\nconst NAME_BY_DISTANCE = DISTANCES.reduce((map, obj) => (\n    map[obj.distance] = obj.name, map\n  ), {}\n)\n\nconst DISTANCE_BY_NAME = DISTANCES.reduce((map, obj) => (\n    map[obj.name] = obj.distance, map\n  ), {}\n)\n\nexport function getName(distance) {\n  return NAME_BY_DISTANCE[distance]\n}\n\nexport function getDistance(name) {\n  return DISTANCE_BY_NAME[name]\n}\n\nexport function getSelectOptions() {\n  return SELECT_OPTIONS\n}\n\nexport function getDistances() {\n  return DISTANCES\n}","import * as distanceService from './distance'\n\n// Encapsulate a race so we can infer reasonable times and calculate\n// things like pace and age grade\nexport default  class Race {\n  constructor(race = {}) {\n    Object.assign(this, race);\n\n    /* Object must match the following:\n    this.distance     // meters\n    this.distanceName // Name for this distance\n    this.time         // int\n    this.timeParts    // int[3] = hh,mm,ss\n    this.hhmmss       // \"hh:mm:ss\" string\n    this.id           // unique id string\n    */\n\n    // Update the missing fields\n    this.recalcFields()\n  }\n\n  // Set the time given array of [hh,mm,ss] or [mm,ss] or [hh,mm]\n  // Note that offset 0 is the most significant part (hh or mm).\n  // Adjust time based on what's reasonable for the distance.\n  recalcFields() {\n    if (this.distance != null) {\n      this.distanceName = distanceService.getName(this.distance)\n\n      if (this.timeParts == null) {\n        this.timeParts = this.getTimeParts()\n      }\n\n      if (this.timeParts != null) {\n        while (this.timeParts.length < 3) {\n          this.timeParts.unshift(0);  // Pad with leading 0 \n        }\n\n        if (this.distance != null && this.timeParts[0] === 0) {\n          // First pass - assume mm:ss\n          let time = this.getTime()\n          let velocity = this.distance / time\n\n          if (velocity > 15.0) { \n            // 15 m/s is faster than a human can run, try hh:mm instead\n            this.timeParts[0] = this.timeParts[1]\n            this.timeParts[1] = this.timeParts[2]\n            this.timeParts[2] = 0\n          }\n        }\n\n        // Fully specified hh:mm:ss\n        this.time = this.getTime()\n        this.hhmmss = this.getHHMMSS()\n      }\n    }\n  }\n\n  // Return time from object or timeParts \n  getTime() {\n    // Prefer convert from timeParts\n    if (this.timeParts != null) {\n      return this.timeParts[0] * 3600 + this.timeParts[1] * 60 + this.timeParts[2]\n    }\n    else if (this.time != null) {\n      return this.time\n    }\n    else {\n      return null\n    }\n  }\n\n  getTimeParts() {\n    if (this.timeParts != null) {\n      return this.timeParts\n    }\n    else if (this.time != null) {\n      return [\n        Math.floor(this.time/3600),\n        Math.floor((this.time % 3600)/60),\n        Math.floor(this.time % 60),\n      ]\n    }\n    else {\n      return null\n    }\n  }\n\n  getHHMMSS() {\n    return this.toHHMMSS(this.getTime());\n  }\n\n  // EYE - default to min/mile \n  getPaceString() {\n    if (this.distance && this.time) {\n      return this.toHHMMSS(1609 * this.time/this.distance);\n    }\n  }\n\n  // Return time as HH:MM:SS string format\n  toHHMMSS(time) {\n    let timeString = \"\";\n    if (time) {\n      let hours = Math.floor(time / 3600);\n      let minutes = Math.floor((time - (hours * 3600)) / 60);\n      let seconds = Math.floor(time - (hours * 3600) - (minutes * 60));\n\n      timeString = hours.toString().padStart(2, '0') + ':' + \n        minutes.toString().padStart(2, '0') + ':' + \n        seconds.toString().padStart(2, '0');\n    }\n    return timeString;\n  }\n\n  // Predict time for a given distance, returning the time and \n  // a confidence weight for our prediction. \n  predictTime(distance) {\n    // NOTE: 5% factor may need to shift as distances get away from the\n    // past race. 800m might not be accurate either.\n    let factor = 1.05;\n    let adjust = factor ** Math.log2(distance / this.distance);\n    let time = this.time * (distance / this.distance) * adjust;\n\n    // Weight is ratio of race distances diminishing predictive value \n    // as distances get further apart. \n    let ratio = distance / this.distance;\n    if (ratio > 1.0) {\n      ratio = 1 / ratio;\n    }\n    let weight = ratio;  \n    return [time, weight];\n  }\n}","import { Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { Form, useForm } from '../../components/useForm';\nimport Controls from '../../controls/Controls';\nimport * as distanceCalc from '../../calc/distance'\nimport Race from '../../calc/Race'\n\n// Parsing and validation for the form fields. Regex should match blank\n// if value is optional. \n// EYE - can we pass the whole thing to useForm and move validate there?\nconst FIELD = {\n  'id': {\n    pattern: RegExp(/(.*)/),\n    help: '',\n    initVal: 0,\n  },\n  'distance': {\n    pattern: RegExp(/^\\s*(\\d+)\\s*$/),\n    help: 'Select a distance',\n    initVal: '',\n  },\n  'hhmmss': {\n    pattern: RegExp(/^\\s*(\\d+):?([0-5]\\d{1}?)(:([0-5]\\d{1}))?\\s*$/),\n    help: 'hh:mm:ss or hh:mm or mm:ss',\n    initVal: '',\n  },\n}\n\n// EYE - Could also change useForm() to expect the FIELD format\nlet initialFValues = {}\nObject.keys(FIELD).forEach((key) => {\n  initialFValues[key] = FIELD[key].initVal\n})\n\nfunction AddRaceForm(props) {\n  const { addOrEdit, recordForEdit } = props;\n\n  // Validate is called on each key stroke for the current field \n  // being edited. For onSubmit, ALL of the fields are included\n  const validate = (fieldValues=values) => {\n    let temp = {...errors};\n\n    Object.keys(fieldValues).forEach((key) => {\n      const check = FIELD[key]\n      if (check) {\n        temp[key] = check.pattern.test(fieldValues[key]) ? '' : check.help;\n      }\n    })\n    setErrors({ ...temp });   // Updates only the set key=value pairs\n\n    if (fieldValues === values) {\n      // Ignore initial blank state\n      return Object.values(temp).every(x => x === \"\")\n    }\n    else {\n      return false\n    }\n  }\n\n  // useForm returns our values and errors objects along with the\n  // hooks to set them.\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate)\n\n  const parseFormToRace = () => {\n    let parsedTime = FIELD.hhmmss.pattern.exec(values.hhmmss);\n    let timeParts = [];\n    timeParts.push(parseInt(parsedTime[1]));\n    timeParts.push(parseInt(parsedTime[2]));\n\n    // Optional last part (ss or mm) is in offset 4 of regex\n    if (parsedTime[4] != null) {\n      timeParts.push(parseInt(parsedTime[4]));\n    }\n\n    // Finally define the race object\n    let race = new Race({\n      id: values.id,\n      distance: parseInt(values.distance), \n      timeParts: timeParts,\n    })\n    return race\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    if (validate()) {\n      const race = parseFormToRace()\n      addOrEdit(race, resetForm)\n    }\n  }\n\n  // useEffect() hook is called after render\n  useEffect(() => {\n      if (recordForEdit != null) {\n        setValues({...recordForEdit})\n      }\n    }, [recordForEdit]\n  )\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Controls.Select\n            label=\"Distance\"\n            name=\"distance\"\n            value={values.distance}\n            onChange={handleInputChange}\n            options={distanceCalc.getSelectOptions()}\n            error={errors.distance}\n          />\n          <Controls.Input\n            label=\"Finish Time\"\n            name=\"hhmmss\"\n            onChange={handleInputChange}\n            value={values.hhmmss}\n            error={errors.hhmmss}\n          />\n          <div>\n            <Controls.Button\n              text=\"Save\"\n              type=\"submit\"\n            />\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n\nexport default AddRaceForm;","import { makeStyles, Table, TableCell, TableHead, TablePagination, \n  TableRow, TableSortLabel } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    marginTop: theme.spacing(1),\n    '& thead th': {\n      fontWeight:  '600',\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.primary.light,\n    },\n    '& tbody td': {\n      fontWeight: '400',\n    },\n    '& tbody tr:hover': {\n      backgroundColor: '#fffbf2',\n      cursor: 'pointer',\n    },\n  },\n}))\n\n// Generic table containing records (rows) and headCells (columns)\nfunction useTable(records, headCells, filterFn) {\n  const classes = useStyles()\n\n  // Add hooks for paging\n  const pages = [5, 10, 25]\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]) \n  const [order, setOrder] = useState()\n  const [orderBy, setOrderBy] = useState()\n\n  // Or build from records?\n  const TblContainer = props => (\n    <Table className={classes.table}>\n      {props.children}\n    </Table>\n  )\n\n  const handleSortRequest = cellId => {\n    // Set direction based on whether we are already sorting on this column\n    // and if the direction is already asc or not\n    const isAsc = orderBy === cellId && order === \"asc\"\n    setOrder(isAsc ? \"desc\" : \"asc\")\n    setOrderBy(cellId)\n  }\n\n  // EYE - or no props?\n  const TblHead = props => (\n    <TableHead>\n      <TableRow>\n        {\n          headCells.map(f => (\n            <TableCell key={f.id}\n              sortDirection = {f.id === orderBy ? order : false}\n            >\n              {\n                f.disableSort ? f.label : \n                  <TableSortLabel \n                    active = {f.id === orderBy}\n                    direction = {f.id === orderBy ? order : \"asc\"}\n                    onClick={() => {handleSortRequest(f.id)}}\n                  >\n                    {f.label}\n                  </TableSortLabel>\n              }\n            </TableCell> \n          ))\n        }\n      </TableRow>\n    </TableHead>\n  )\n\n  // Paging controls (use values from hooks above)\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const TblPagination = () => (\n    <TablePagination\n      component=\"div\"\n      page={page}\n      rowsPerPageOptions={pages}\n      rowsPerPage={rowsPerPage}\n      count={records.length}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n    />\n  )\n\n  // Apparently lifted from MUI documentation\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index])\n    stabilizedThis.sort((a,b) => {\n      const order = comparator(a[0], b[0])\n      if (order !== 0) {\n        return order;\n      }\n      else {\n        return a[1] - b[1];\n      }\n    })\n    return stabilizedThis.map((el) => el[0])\n  }\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  const recordsAfterPagingAndSorting = () => {\n    return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n      .slice(page * rowsPerPage, (page+1) * rowsPerPage);\n  }\n\n  // Returning an object containing TblContainer\n  return {\n    TblHead,\n    TblContainer, \n    TblPagination, \n    recordsAfterPagingAndSorting\n  }\n}\n\nexport default useTable;","import Race from '../calc/Race'\n\nconst KEYS = {\n  pastRaces: \"pastRaces\",\n  distance: \"distance\",\n  time: \"time\",\n  id: \"id\",\n}\n\nfunction generateId() {\n  // Base on time of day as u8 epoch time\n  return Date.now()\n}\n\nexport function getPastRaces() {\n  let pastRaces = localStorage.getItem(KEYS.pastRaces)\n  if (pastRaces == null || pastRaces.length === 0) {\n    pastRaces = JSON.stringify([])\n    localStorage.setItem(KEYS.pastRaces, pastRaces)\n  }\n\n  // Convert raw json/obj to Race class instance\n  let rawData = JSON.parse(pastRaces)\n  let results = []\n  rawData.forEach(row => {\n    results.push(new Race(row))\n  })\n  //return JSON.parse(pastRaces)\n  return results\n}\n\nexport function insertPastRace(data) {\n  let pastRaces = getPastRaces()\n  data[KEYS.id] = generateId()\n  pastRaces.push(data)\n  localStorage.setItem(KEYS.pastRaces, JSON.stringify(pastRaces))\n}\n\nexport function updatePastRace(data) {\n  let pastRaces = getPastRaces()\n  let idx = pastRaces.findIndex(x => x.id === data.id)\n  pastRaces[idx] = {...data}\n  localStorage.setItem(KEYS.pastRaces, JSON.stringify(pastRaces))\n}\n\nexport function deletePastRace(id) {\n  let pastRaces = getPastRaces()\n  pastRaces = pastRaces.filter(x => x.id !== id)\n  localStorage.setItem(KEYS.pastRaces, JSON.stringify(pastRaces))\n}","import { Fab, Paper, TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { AddOutlined, EditOutlined } from '@material-ui/icons';\nimport React, {useState} from 'react';\nimport Popup from '../../components/Popup'\nimport Notification from '../../components/Notification'\nimport AddRaceForm from './AddRaceForm';\nimport { contentStyles } from '../../components/Content'\nimport useTable from '../../components/useTable'\nimport * as historyService from '../../services/pastRaces'\nimport Controls from '../../controls/Controls';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction History(props) {\n  const classes = contentStyles()\n  const [records, setRecords] = useState(historyService.getPastRaces())\n  const [recordForEdit, setRecordForEdit] = useState(null)\n  const [filterFn, setFilterFn] = useState({fn: items => { return items }})\n  const [notify, setNotify] = useState({\n    isOpen:false, message:'', type:''\n  })\n\n  // Open popup automatically if no records\n  const [openPopup, setOpenPopup] = useState(records.length === 0)   \n\n  const addOrEdit = (race, resetForm) => {\n    // ID is 0 on new record until it is inserted\n    if (race.id == null || race.id === 0) {\n      historyService.insertPastRace(race)\n    }\n    else {\n      historyService.updatePastRace(race)\n    }\n\n    setRecordForEdit(null)\n    resetForm()\n    setOpenPopup(false)\n    setRecords(historyService.getPastRaces())\n\n    setNotify({\n      isOpen: true,\n      type: 'success',\n      message: 'Saved Successfully!',\n    })\n  }\n\n  const openInPopup = item => {\n    setRecordForEdit(item)\n    setOpenPopup(true)\n  }\n\n  const headerCells = [\n    {id:'distance', label:'Distance', disableSort:true},\n    {id:'time', label:'Time', disableSort:true},\n    {disableSort:true} \n  ]\n\n  // This brings the Tbl types into our name space\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headerCells, filterFn)\n\n  const onDelete = id => {\n    historyService.deletePastRace(id)\n    setRecords(historyService.getPastRaces())\n    setNotify({\n      isOpen: true,\n      type: 'error',\n      message: 'Deleted Race!',\n    })\n  }\n\n  return (\n    <div>\n      {addButton(classes, setOpenPopup)}\n      <Paper className={classes.pageContent}>\n        <TblContainer>\n          <TblHead />\n          <TableBody>\n          {\n            // No paging/sorting needed. Without pagination it just \n            // truncates the data\n            //recordsAfterPagingAndSorting().map(\n            records.map(\n              (item) => (\n                <TableRow key={item.id}>\n                  <TableCell> {item.distanceName} </TableCell>\n                  <TableCell> {item.hhmmss} </TableCell>\n                  <TableCell>\n                    <Controls.ActionButton color=\"primary\" fontSize=\"small\"\n                      onClick={() => { openInPopup(item) }}\n                    >\n                      <EditOutlined/>\n                    </Controls.ActionButton>\n                    <Controls.ActionButton color=\"secondary\" fontSize=\"small\"\n                      onClick={() => { onDelete(item.id) }}\n                    >\n                      <CloseIcon />\n                    </Controls.ActionButton>\n                  </TableCell>\n                </TableRow>\n              )\n            )\n          }\n          </TableBody>\n        </TblContainer>\n      </Paper>\n      <Popup\n        title=\"Past Race\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <AddRaceForm \n          addOrEdit={addOrEdit}\n          recordForEdit={recordForEdit}\n        />\n      </Popup>\n      <Notification\n        notify={notify}\n        setNotify={setNotify}\n      />\n    </div>\n  )\n}\n\nconst addButton = (classes, setOpenPopup) => (\n  <Fab variant=\"extended\" aria-label=\"Add Race\" color=\"secondary\"\n    className={classes.fabButton}\n    onClick={() => { setOpenPopup(true) }}\n  >\n    <AddOutlined />\n    Add Race\n  </Fab>\n)\n\nexport default History;","import * as distanceCalc from './distance'\nimport * as historyService from '../services/pastRaces'\nimport Race from './Race'\n\n// Return array of race distances with prediction values\nexport function getRacePredictions() {\n  // Iterate by target race\n  let targetRaces = []\n\n  distanceCalc.getDistances().forEach(target => {\n    // Iterate past races\n    let totalTime = 0.0\n    let totalWeight = 0.0\n    historyService.getPastRaces().forEach(pastRace => {\n      const [time, weight] = pastRace.predictTime(target.distance)\n      totalTime += time * weight\n      totalWeight += weight\n    })\n    if (totalWeight > 0.0) {\n      let targetRace = new Race({\n        time: totalTime/totalWeight,\n        distance: target.distance,\n      })\n      targetRaces.push(targetRace)\n    }\n  })\n  return targetRaces\n}","import React, { useState } from 'react';\nimport { Paper, TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { contentStyles } from '../../components/Content'\nimport useTable from '../../components/useTable'\nimport * as predictCalc from '../../calc/predict'\n\nfunction RacePredictions(props) {\n  const classes = contentStyles()\n  const [filterFn, setFilterFn] = useState({fn: items => { return items }})\n  const [records, setRecords] = useState(predictCalc.getRacePredictions())\n\n  const headerCells = [\n    {id:'distance', label:'Distance', disableSort:true},\n    {id:'time', label:'Time', disableSort:true},\n    {id:'pace', label:'Pace', disableSort:true},\n  ]\n\n  // This brings the Tbl types into our name space\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headerCells, filterFn)\n\n  return (\n    <div>\n      <Paper className={classes.pageContent}>\n        <TblContainer>\n          <TblHead />\n          <TableBody>\n          {\n            records.map(\n              (item) => (\n                <TableRow key={item.id}>\n                  <TableCell> {item.distanceName} </TableCell>\n                  <TableCell> {item.hhmmss} </TableCell>\n                  <TableCell> {item.getPaceString()} </TableCell>\n                </TableRow>\n              )\n            )\n          }\n          </TableBody>\n        </TblContainer>\n      </Paper>\n    </div>\n  )\n}\n\nexport default RacePredictions;","import React from 'react';\nimport {Paper} from '@material-ui/core';\nimport {contentStyles} from '../../components/Content'\n\nfunction Charts(props) {\n  const classes = contentStyles()\n\n  return (\n    <div>\n      <Paper className={classes.pageContent}>\n        <div> TBD Charts Content </div>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Charts;","import React, {useState} from 'react'\nimport {createMuiTheme, CssBaseline, ThemeProvider, withStyles} \n  from '@material-ui/core'\nimport { PermIdentityOutlined, HistoryOutlined, DirectionsRunOutlined, \n  ShowChartOutlined } from '@material-ui/icons'\n\nimport Content from '../components/Content'\nimport Footer from '../components/Footer'\nimport UserProfile from '../pages/user_profile/UserProfile'\nimport History from '../pages/history/History'\nimport RacePredictions from '../pages/predict/RacePredictions'\nimport Charts from '../pages/charts/Charts'\n\n// We can create theme objects like below, and save them in a \n// map, and allow user to set the theme programatically\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#333996',\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: '#f83245',\n      light: '#f8324526'\n    },\n    background: {\n      default: '#f4f5fd',\n    },\n  },\n  shape: {\n    borderRadius: '4px',\n  },\n\n  // Overrides default MUI behavior for the app. See MUI API docs\n  // for each component to see what you can do.\n  overrides: {\n    MuiAppBar: {\n      root:{\n        transform: 'translateZ(0)',\n      }\n    }\n  },\n  props: {\n    // Sets ripple property for child components\n    MuiIconButton: {\n      disableRipple: false,\n    }\n  }\n});\n\n// Main application styling\nconst styles = {\n  appMain: {\n    paddingLeft: '0px',\n    width: '100%',\n  }\n}\n\n// Define list of pages \n// EYE - add race data and functions as page attr\nconst pages = [\n  { \n    title: \"Profile\", \n    longTitle: \"User Profile\", \n    page: (<UserProfile />),\n    icon: (<PermIdentityOutlined color=\"primary\" />) \n  },\n  { \n    title: \"History\", \n    longTitle: \"Race History\", \n    page: (<History />),\n    icon: (<HistoryOutlined color=\"primary\" />)\n  },\n  { \n    title: \"Predict\", \n    longTitle: \"Race Predictions\", \n    page: (<RacePredictions />),\n    icon: (<DirectionsRunOutlined color=\"primary\" />) \n  },\n  { \n    title: \"Charts\", \n    longTitle: \"Charts\", \n    page: (<Charts />),\n    icon: (<ShowChartOutlined color=\"primary\" />) \n  },\n]\n\nconst App = (props) => {\n  const {classes} = props;\n\n  // Defaulting to History page, but should encourage profile\n  // if no cache data found\n  const [currentPage, setCurrentPage] = useState(\"History\")\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.appMain}> \n        <Content pages={pages} currentPage={currentPage}/>\n        <Footer pages={pages} setCurrentPage={setCurrentPage}/> \n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default withStyles(styles)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// NOTE!!! Material-UI classes don't work with: import { App }\nimport App from './app/App'\n//import './index.css'\n\n// ===================================\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}