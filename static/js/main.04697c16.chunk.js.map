{"version":3,"sources":["index.js"],"names":["RaceCalc","props","state","past_races","target_races","scenario","age","altitude","units","className","PastRaceTable","races","this","RaceScenario","TargetRaceTable","React","Component","rows","forEach","race","push","PastRaceRow","PastRaceAdd","distance","time","TargetRaceRow","pace","age_grade","ReactDOM","render","document","getElementById"],"mappings":"6MAKMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAY,GACZC,aAAc,GACdC,SAAU,CACNC,IAAK,GACLC,SAAU,EACVC,MAAO,WARI,E,0CAanB,WACE,OACE,sBAAKC,UAAU,YAAf,UACE,mDACA,cAACC,EAAD,CAAeC,MAAOC,KAAKV,MAAMC,aACjC,cAACU,EAAD,CAAcR,SAAUO,KAAKV,MAAMG,WACnC,cAACS,EAAD,CAAiBH,MAAOC,KAAKV,MAAME,sB,GApBpBW,IAAMC,WA2BvBN,E,4JACJ,WACE,IAAMO,EAAO,GAYb,OAXAL,KAAKX,MAAMU,MAAMO,SAAQ,SAACC,GACtBF,EAAKG,KACH,cAACC,EAAD,CAAaF,KAAMA,QAKzBF,EAAKG,KACH,cAACC,EAAD,KAIA,sBAAKZ,UAAU,kBAAf,UACE,8CACA,kCACE,+BACE,4CACA,+CACA,uCACA,+CAEF,kCACGQ,EACD,cAACK,EAAD,iB,GA1BgBP,IAAMC,WAkC5BK,E,4JACJ,WAEE,IAAIF,EAAOP,KAAKX,MAAMkB,KAClBI,EAAWJ,EAAOA,EAAKI,SAAW,GAClCC,EAAOL,EAAOA,EAAKK,KAAO,GAC1BlB,EAAMa,EAAOA,EAAKb,IAAM,GACxBC,EAAWY,EAAOA,EAAKZ,SAAW,GAEtC,OACE,+BACE,mCAAMgB,EAAN,OACA,mCAAMC,EAAN,OACA,mCAAMlB,EAAN,OACA,mCAAMC,EAAN,c,GAdkBQ,IAAMC,WAoB1BM,E,4JACJ,WACE,OACE,6BACE,6BACE,iD,GALgBP,IAAMC,WAa1BH,E,4JACJ,WACE,OACE,sBAAKJ,UAAU,gBAAf,UACE,iDACA,kCACE,+BACE,uCACA,4CACA,4CAEF,+BACE,mCAAMG,KAAKX,MAAMI,SAASC,IAA1B,QACA,mCAAMM,KAAKX,MAAMI,SAASE,SAA1B,QACA,mCAAMK,KAAKX,MAAMI,SAASG,MAA1B,qB,GAdeO,IAAMC,WAuB3BF,E,4JACJ,WACE,IAAMG,EAAO,GAOb,OANAL,KAAKX,MAAMU,MAAMO,SAAQ,SAACC,GACtBF,EAAKG,KACH,cAACK,EAAD,CAAeN,KAAMA,QAKzB,sBAAKV,UAAU,oBAAf,UACE,gDACA,gCACE,+BACE,4CACA,+CACA,wCACA,yD,GAjBkBM,IAAMC,WAyB9BS,E,4JACJ,WACE,OACE,+BACE,mCAAMb,KAAKX,MAAMkB,KAAKI,SAAtB,OACA,mCAAMX,KAAKX,MAAMkB,KAAKK,KAAtB,OACA,mCAAMZ,KAAKX,MAAMkB,KAAKO,KAAtB,OACA,mCAAMd,KAAKX,MAAMkB,KAAKQ,UAAtB,c,GAPoBZ,IAAMC,WAclCY,IAASC,OACL,cAAC7B,EAAD,IACA8B,SAASC,eAAe,W","file":"static/js/main.04697c16.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Top level application \nclass RaceCalc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      past_races: [],\n      target_races: [],\n      scenario: {\n          age: 30,\n          altitude: 0,\n          units: \"meters\",\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"race-calc\">\n        <h1> Race Calculator </h1>\n        <PastRaceTable races={this.state.past_races}/>\n        <RaceScenario scenario={this.state.scenario}/>\n        <TargetRaceTable races={this.state.target_races}/>\n      </div>\n    );\n  }\n}\n\n// Past races used to predict future results\nclass PastRaceTable extends React.Component {\n  render() {\n    const rows = [];\n    this.props.races.forEach((race) => {\n        rows.push(\n          <PastRaceRow race={race}/>\n        );\n    });\n\n    // Add one more blank row\n    rows.push(\n      <PastRaceRow />\n    );\n\n    return (\n      <div className=\"past-race-table\"> \n        <h2> Past Races </h2>\n        <table>\n          <tr>\n            <th> Distance </th>\n            <th> Finish Time </th>\n            <th> Age </th>\n            <th> Altitude </th>\n          </tr>\n          <tbody>\n            {rows}\n            <PastRaceAdd />\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass PastRaceRow extends React.Component {\n  render() {\n    // EYE TBD - this should be an input form\n    let race = this.props.race;\n    let distance = race ? race.distance : \"\";\n    let time = race ? race.time : \"\";\n    let age = race ? race.age : \"\";\n    let altitude = race ? race.altitude : \"\";\n\n    return (\n      <tr>\n        <td> {distance} </td>\n        <td> {time} </td>\n        <td> {age} </td>\n        <td> {altitude} </td>\n      </tr>\n    );\n  }\n}\n\nclass PastRaceAdd extends React.Component {\n  render() {\n    return (\n      <tr>\n        <td> \n          <button> + </button> \n        </td>\n      </tr>\n    );\n  }\n}\n\n// Scenario for predicting future target races\nclass RaceScenario extends React.Component {\n  render() {\n    return (\n      <div className=\"race-scenario\">\n        <h2> Race Scenario </h2>\n        <table> \n          <tr> \n            <th> Age </th>\n            <th> Altitude </th>\n            <th> Units </th>\n          </tr>\n          <tr> \n            <td> {this.props.scenario.age}  </td>\n            <td> {this.props.scenario.altitude}  </td>\n            <td> {this.props.scenario.units}  </td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\n// Future predicted race times\nclass TargetRaceTable extends React.Component {\n  render() {\n    const rows = [];\n    this.props.races.forEach((race) => {\n        rows.push(\n          <TargetRaceRow race={race}/>\n        );\n    });\n\n    return (\n      <div className=\"target-race-table\">\n        <h2> Target Races </h2>\n        <table>\n          <tr>\n            <th> Distance </th>\n            <th> Finish Time </th>\n            <th> Pace </th>\n            <th> Age Grade </th>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass TargetRaceRow extends React.Component {\n  render() {\n    return (\n      <tr>\n        <td> {this.props.race.distance} </td>\n        <td> {this.props.race.time} </td>\n        <td> {this.props.race.pace} </td>\n        <td> {this.props.race.age_grade} </td>\n      </tr>\n    );\n  }\n}\n\n// ===================================\nReactDOM.render(\n    <RaceCalc />,\n    document.getElementById('root')\n);"],"sourceRoot":""}