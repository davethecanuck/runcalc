{"version":3,"sources":["controls/ActionButton.js","components/PageHeader.js","components/Content.js","components/Footer.js","pages/user_profile/UserProfile.js","controls/Select.js","controls/Checkbox.js","controls/Button.js","controls/Controls.js","controls/Input.js","controls/RadioGroup.js","components/Popup.js","components/Notification.js","components/useForm.js","calc/distance.js","calc/Race.js","pages/history/AddRaceForm.js","components/useTable.js","services/pastRaces.js","pages/history/History.js","calc/predict.js","pages/predict/RacePredictions.js","pages/help/Help.js","app/App.js","index.js"],"names":["useStyles","makeStyles","theme","root","minWidth","margin","spacing","secondary","backgroundColor","palette","light","color","main","primary","ActionButton","props","children","onClick","classes","Button","className","pageHeader","padding","display","marginBottom","justifyContent","alignItems","pageTitle","paddingLeft","paddingRight","opacity","PageHeader","title","icon","Paper","elevation","square","Typography","variant","component","Content","pages","currentPage","content","header","forEach","p","page","longTitle","contentStyles","pageContent","fabButton","left","right","position","bottom","top","iconButtonLabel","flexDirection","fontSize","Footer","setCurrentPage","AppBar","Toolbar","Grid","container","map","item","IconButton","label","UserProfile","Select","name","value","error","onChange","options","FormControl","FormLabel","MenuItem","id","FormHelperText","Checkbox","FormControlLabel","control","checked","e","target","convertToDefaultParam","textTransform","Controls","Input","other","TextField","helperText","RadioGroup","items","row","Radio","text","size","dialogWrapper","dialogTitle","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","Snackbar","isOpen","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","event","reason","Alert","severity","type","message","width","Form","autoComplete","DISTANCES","distance","SELECT_OPTIONS","NAME_BY_DISTANCE","reduce","obj","Race","race","Object","assign","this","recalcFields","altitude","distanceName","timeParts","getTimeParts","length","unshift","time","getTime","hhmmss","getHHMMSS","Math","floor","toHHMMSS","toMMSS","timeString","hours","minutes","seconds","toString","padStart","bestTime","gradeFactor","ratio","FIELD","pattern","RegExp","help","initVal","initialFValues","keys","key","AddRaceForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","check","test","setErrors","every","x","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","parsedTime","exec","push","parseInt","parseFormToRace","xs","table","marginTop","fontWeight","textAlign","cursor","useTable","records","headCells","filterFn","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblHead","TableHead","TableRow","f","TableCell","sortDirection","disableSort","TableSortLabel","active","direction","cellId","TblContainer","Table","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","KEYS","getPastRaces","pastRaces","localStorage","getItem","JSON","stringify","setItem","rawData","parse","results","insertPastRace","data","Date","now","addButton","Fab","aria-label","AddOutlined","History","historyService","setRecords","setRecordForEdit","onDelete","filter","TableBody","openInPopup","EditOutlined","idx","findIndex","getRacePredictions","targetRaces","totalTime","totalWeight","pastRace","predictTime","weight","targetRace","RacePredictions","predictCalc","getPaceString","Help","createMuiTheme","background","default","shape","borderRadius","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","PermIdentityOutlined","HistoryOutlined","DirectionsRunOutlined","HelpOutlineRounded","withStyles","appMain","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12014ed9.chunk.js","sourcesContent":["import { Button, makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 0,\n    margin: theme.spacing(0.5)\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.light,\n    '& .MuiButton-label': {\n      color: theme.palette.secondary.main,\n    }\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.light,\n    '& .MuiButton-label': {\n      color: theme.palette.primary.main,\n    }\n  },\n}))\n\nfunction ActionButton(props) {\n  const {color, children, onClick} = props\n  const classes = useStyles()\n\n  // color is either 'primary' or 'secondary' (passed in from user)\n  // so the classes resolves to the CSS rule above for the given color.\n  // We could extend the css to include any other colors (e.g. tertiary)\n  // we want.\n  return (\n    <Button\n      onClick={onClick}\n      className={`${classes.root} ${classes[color]}`}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default ActionButton;","import { makeStyles, Paper, Typography } from '@material-ui/core';\nimport { HelpOutlineRounded } from '@material-ui/icons';\nimport React from 'react';\nimport ActionButton from '../controls/ActionButton';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiPaper-root': {\n      //backgroundColor: '#fdfdff',\n      backgroundColor: '#fdfdff',\n    }\n  },\n  pageHeader: {\n    padding: theme.spacing(0),\n    display: 'flex',\n    marginBottom: theme.spacing(0),\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  pageTitle: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n\n    // Change opacity of subtitle\n    '& .MuiTypography-subtitle2': {    // Inspect to get element name\n      opacity: 0.6,\n    }\n  }\n}));\n\nexport default function PageHeader(props) {\n  const classes = useStyles();\n  const {title, icon} = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={1} square>\n        <div className={classes.pageHeader}>\n          {icon}\n          <div className={classes.pageTitle}>\n            <Typography variant=\"h6\" component=\"div\">\n              {title}\n            </Typography>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n}","import { makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport PageHeader from './PageHeader'\n\n// Opens current page content\nexport default function Content(props) {\n  const { pages, currentPage } = props\n\n  // Find the page that is currently set to be open\n  let content = null\n  let header = null\n\n  pages.forEach((p) => {\n    // Using title as an id\n    if (p.title === currentPage) {\n      content = p.page\n      header = (\n        <PageHeader\n          title={p.longTitle}\n          icon={p.icon}\n        />\n      )\n    }\n  })\n  \n  return (\n    <div>\n      {header}\n      {content}\n    </div>\n  );\n}\n\n// Common CSS for page content\nexport const contentStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(16),  // Stay above footer and FAB\n    padding: theme.spacing(1),\n  },\n  fabButton: {\n    left: 'auto',\n    right: theme.spacing(1),\n    position: 'fixed',\n\n    // Floating button at top\n    //top: theme.spacing(9),\n    //bottom: 'auto',\n\n    // Floating button at bottom\n    bottom: theme.spacing(9),\n    top: 'auto',\n  },\n}))\n","import React from 'react'\nimport {AppBar, Toolbar, Grid, makeStyles, IconButton} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  // 'root' overrides the default corresponding class from Material UI.\n  // - root is the outermost class for the AppBar element (and other MUI components)\n  // - use inspect of final rendered page to verify\n  root: {\n    backgroundColor: '#fff',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    top: 'auto',\n    bottom: 0,\n  },\n  iconButtonLabel: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 'medium',\n  },\n}));\n\nconst Footer = (props) => {\n  const classes = useStyles(props);\n  const {pages, setCurrentPage} = props;\n\n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar>\n        <Grid container alignItems=\"center\">\n          {\n            pages.map((p) => (\n              <Grid item> \n                <IconButton classes={{label: classes.iconButtonLabel}}\n                  onClick={() => { setCurrentPage(p.title) }}\n                >\n                  {p.icon}\n                  <label> {p.title} </label>\n                </IconButton>\n              </Grid>\n            ))\n          }\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport {Paper} from '@material-ui/core'\nimport {contentStyles} from '../../components/Content'\n\nfunction UserProfile(props) {\n  const classes = contentStyles()\n\n  return (\n    <div>\n      <Paper className={classes.pageContent}>\n        <div> TBD User Profile Content </div>\n      </Paper>\n    </div>\n  )\n}\n\nexport default UserProfile;","import { FormControl, FormHelperText, FormLabel, MenuItem,\n  Select as MuiSelect } from '@material-ui/core';\nimport React from 'react';\n\nfunction Select(props) {\n  const {name, label, value, error=null, onChange, options} = props;\n\n  return (\n    <FormControl variant=\"outlined\" {...(error && { error:true })}>\n      <FormLabel> {label} </FormLabel>\n      <MuiSelect\n        label={label}\n        name={name}\n        value={value}\n        onChange={onChange}\n      >\n        <MenuItem value=\"\"> None </MenuItem> \n        {\n          options.map(\n            item => (\n              <MenuItem key={item.id} value={item.id}> \n                {item.title} \n              </MenuItem>\n            )\n          )\n        }\n      </MuiSelect>\n      {error && <FormHelperText> {error} </FormHelperText>}\n    </FormControl>\n  );\n}\n\nexport default Select;","import { Checkbox as MuiCheckbox, FormControl, FormControlLabel } \n  from '@material-ui/core';\nimport React from 'react';\n\n// Helper function for checkboxes. There is not a value parameter like\n// other input types (for onChange/handleInputChange) so this function will\n// convert the checkbox params to match the others.\nconst convertToDefaultParam = (name,value) => ({\n  target: {\n    name, value    // Same as name:name, value:value\n  }\n})\n\nfunction Checkbox(props) {\n  const {name, label, value, onChange} = props;\n\n  return (\n    <FormControl>\n      <FormControlLabel\n        label={label}\n        control={ \n          <MuiCheckbox \n            name={name}\n            checked={value}\n            onChange={e => onChange(convertToDefaultParam(name, e.target.checked))}\n            color=\"primary\"\n          /> \n        }\n      />\n    </FormControl>\n  );\n}\n\nexport default Checkbox;","import React from 'react';\nimport { Button as MuiButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(0.5),\n  },\n  label: {\n    textTransform: \"none\",\n  }\n}))\n\nfunction Button(props) {\n  const { text, size, color, variant, onClick, ...other } = props;\n  const classes = useStyles();\n\n  // Define default values for the button using {value || default}.\n  // ...other allows any other property to be passed in (e.g. type=\"submit\")\n  return (\n    <MuiButton\n      variant={variant || \"contained\"}\n      size={size || \"large\"}\n      color={color || \"primary\"}\n      onClick={onClick}\n      {...other}\n      classes={{root:classes.root, label:classes.label}}\n    >\n      {text}\n    </MuiButton>\n  );\n}\n\nexport default Button;","import Input from './Input';\nimport RadioGroup from './RadioGroup';\nimport Select from './Select';\nimport Checkbox from './Checkbox';\nimport Button from './Button';\nimport ActionButton from './ActionButton';\n\n// This exists to create a namespace separate from the equivalent\n// MUI components. \nconst Controls = {\n    Input, \n    RadioGroup,\n    Select,\n    Checkbox,\n    Button,\n    ActionButton,\n}\n\nexport default Controls;","import { TextField } from '@material-ui/core';\nimport React from 'react';\n\nexport default function Input(props) {\n    const {name, label, value, error=null, onChange, ...other} = props;\n\n    // If error set, return error/helperText object\n    return (\n        <TextField\n            variant=\"outlined\" \n            name={name}\n            label={label}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && { error:true, helperText:error })}\n        />\n    );\n}","import React from 'react';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup as MuiRadioGroup,\n  Radio } from '@material-ui/core';\n\n// NOTE: We are deliberately using RadioGroup as the name so we can\n// can show how to resolve namespace issues using Controls.js\nexport default function RadioGroup(props) {\n  const { name, label, value, onChange, items } = props;\n\n  return (\n    <FormControl>\n      <FormLabel> {label} </FormLabel>\n      <MuiRadioGroup row\n        name={name}\n        value={value}\n        onChange={onChange}\n      >\n        {\n          items.map(\n            (item) => (\n              <FormControlLabel \n                key={item.id}\n                label={item.title} \n                value={item.id} \n                control={<Radio/>} \n              />\n            )\n          )\n        }\n      </MuiRadioGroup>\n    </FormControl>\n  );\n}","import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } \n  from '@material-ui/core';\nimport React from 'react';\nimport Controls from '../controls/Controls'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  dialogWrapper: {\n    padding: theme.spacing(2),\n    position: \"absolute\",\n    top: theme.spacing(5),\n  },\n  dialogTitle: {\n    paddingRight: 0,\n  }\n}))\n\nfunction Popup(props) {\n  const {title, children, openPopup, setOpenPopup} = props\n  const classes = useStyles()\n\n  return (\n    <Dialog \n      open={openPopup} \n      maxWidth=\"md\" \n      classes={{paper: classes.dialogWrapper}}\n    >\n      <DialogTitle className={classes.dialogTitle}>\n        <div style={{display: \"flex\"}}>\n          <Typography variant=\"h6\" component=\"div\" style={{flexGrow: 1}}>\n            {title}\n          </Typography>\n          <Controls.ActionButton \n            color=\"secondary\" \n            onClick={() => setOpenPopup(false)}\n          >\n            <CloseIcon />\n          </Controls.ActionButton>\n        </div>\n      </DialogTitle>\n      <DialogContent dividers>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default Popup;","import { makeStyles, Snackbar} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    top: theme.spacing(9)\n  }\n}))\n\nfunction Notification(props) {\n  const { notify, setNotify } = props\n  const classes = useStyles()\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    else {\n      setNotify({\n        ...notify,\n        isOpen:false\n      })\n    }\n  }\n\n  return (\n    <Snackbar className={classes.root}\n      open={notify.isOpen}\n      autoHideDuration={3000}\n      anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n      onClose={handleClose}\n    >\n      <Alert\n        severity={notify.type}\n      >\n        {notify.message}\n      </Alert>\n\n    </Snackbar>\n  );\n}\n\nexport default Notification;","import { makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\n\n// This is a generic form that can be used for creating different \n// forms with different initialFValues. We can create consistent handlers\n// here and styling\nexport function useForm(initialFValues, validateOnChange=false, validate) {\n  const [ values, setValues ] = useState(initialFValues);\n  const [ errors, setErrors ] = useState({});\n\n  const handleInputChange = e => {\n    const {name, value} = e.target;\n    setValues({       // Uses the setValues hook from above\n      ...values,      // Copies all of the incoming values from the hook above\n      [name]:value,   // Sets the value property of the given input name\n    })\n\n    if (validateOnChange) {\n      validate({[name]:value});\n    }\n  }\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  }\n\n  return {\n    values, \n    setValues, \n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // Inspect tells us the class for the form control.\n    // The & refers to the parent (root)\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1),\n    }\n  }\n}))\n\nexport function Form(props) {\n  // props.children contains all of the html children of the <Form> element\n  // ...other are all of the other properties we may pass in, such as onSubmit\n  const classes = useStyles();\n  const {children, ...other} = props;\n\n  return (\n    <form className={classes.root} autoComplete=\"off\" {...other}>\n      {children}\n    </form>\n  );\n}","// 800m is the minimum distance where the model barely works, \n// and 1500m is probably closer to reality for predictiveness\nconst DISTANCES = [\n  { name: \"800m\", distance: 800 },\n  { name: \"1km\", distance: 1000 },\n  { name: \"1500m\", distance: 1500 },\n  { name: \"1600m\", distance: 1600 },\n  { name: \"1 mile\", distance: 1609 },\n  { name: \"3000m\", distance: 3000 },\n  { name: \"2 mile\", distance: 3219 },\n  { name: \"5km\", distance: 5000 },\n  { name: \"8km\", distance: 8000 },\n  { name: \"5 mile\", distance: 8047 },\n  { name: \"10km\", distance: 10000 },\n  { name: \"15km\", distance: 15000 },\n  { name: \"20km\", distance: 20000 },\n  { name: \"13.1 mile\", distance: 21097 },\n  { name: \"26.2 mile\", distance: 42195 },\n  { name: \"50km\", distance: 50000 }\n]\n\nconst SELECT_OPTIONS = DISTANCES.map((row) => {\n  return { title: row.name, id: row.distance }\n})\n\nconst NAME_BY_DISTANCE = DISTANCES.reduce((map, obj) => (\n    map[obj.distance] = obj.name, map\n  ), {}\n)\n\nconst DISTANCE_BY_NAME = DISTANCES.reduce((map, obj) => (\n    map[obj.name] = obj.distance, map\n  ), {}\n)\n\nexport function getName(distance) {\n  return NAME_BY_DISTANCE[distance]\n}\n\nexport function getDistance(name) {\n  return DISTANCE_BY_NAME[name]\n}\n\nexport function getSelectOptions() {\n  return SELECT_OPTIONS\n}\n\nexport function getDistances() {\n  return DISTANCES\n}","import * as distanceService from './distance'\n\n// Encapsulate a race so we can infer reasonable times and calculate\n// things like pace and age grade\nexport default  class Race {\n  constructor(race = {}) {\n    Object.assign(this, race);\n\n    /* Object must match the following:\n    this.distance     // meters\n    this.distanceName // Name for this distance\n    this.time         // int\n    this.timeParts    // int[3] = hh,mm,ss\n    this.hhmmss       // \"hh:mm:ss\" string\n    this.altitude     // int\n    this.id           // unique id string\n    */\n\n    // Update the missing fields\n    this.recalcFields()\n  }\n\n  // Set the time given array of [hh,mm,ss] or [mm,ss] or [hh,mm]\n  // Note that offset 0 is the most significant part (hh or mm).\n  // Adjust time based on what's reasonable for the distance.\n  recalcFields() {\n    // Default to 0 ft altitude\n    this.altitude |= 0\n\n    // Need distance as a minimum for interpreting the time\n    if (this.distance != null) {\n      this.distanceName = distanceService.getName(this.distance)\n\n      if (this.timeParts == null) {\n        this.timeParts = this.getTimeParts()\n      }\n\n      if (this.timeParts != null) {\n        while (this.timeParts.length < 3) {\n          this.timeParts.unshift(0);  // Pad with leading 0 \n        }\n\n        if (this.distance != null && this.timeParts[0] === 0) {\n          // First pass - assume mm:ss\n          let time = this.getTime()\n          let velocity = this.distance / time\n\n          if (velocity > 15.0) { \n            // 15 m/s is faster than a human can run, try hh:mm instead\n            this.timeParts[0] = this.timeParts[1]\n            this.timeParts[1] = this.timeParts[2]\n            this.timeParts[2] = 0\n          }\n        }\n\n        // Fully specified hh:mm:ss\n        this.time = this.getTime()\n        this.hhmmss = this.getHHMMSS()\n      }\n    }\n  }\n\n  // Return time from object or timeParts \n  getTime() {\n    // Prefer convert from timeParts\n    if (this.timeParts != null) {\n      return this.timeParts[0] * 3600 + this.timeParts[1] * 60 + this.timeParts[2]\n    }\n    else if (this.time != null) {\n      return this.time\n    }\n    else {\n      return null\n    }\n  }\n\n  getTimeParts() {\n    if (this.timeParts != null) {\n      return this.timeParts\n    }\n    else if (this.time != null) {\n      return [\n        Math.floor(this.time/3600),\n        Math.floor((this.time % 3600)/60),\n        Math.floor(this.time % 60),\n      ]\n    }\n    else {\n      return null\n    }\n  }\n\n  getHHMMSS() {\n    return this.toHHMMSS(this.getTime());\n  }\n\n  // EYE - default to min/mile \n  getPaceString() {\n    if (this.distance && this.time) {\n      return this.toMMSS(1609 * this.time/this.distance);\n    }\n  }\n\n  // Return time as HH:MM:SS string format\n  toHHMMSS(time) {\n    let timeString = \"\";\n    if (time) {\n      let hours = Math.floor(time / 3600);\n      let minutes = Math.floor((time - (hours * 3600)) / 60);\n      let seconds = Math.floor(time - (hours * 3600) - (minutes * 60));\n\n      timeString = hours.toString().padStart(2, '0') + ':' + \n        minutes.toString().padStart(2, '0') + ':' + \n        seconds.toString().padStart(2, '0');\n    }\n    return timeString;\n  }\n\n  // Return time as MM:SS string format\n  toMMSS(time) {\n    let timeString = \"\";\n    if (time) {\n      let minutes = Math.floor(time / 60);\n      let seconds = Math.floor(time - (minutes * 60));\n\n      timeString = minutes.toString().padStart(2, '0') + ':' + \n        seconds.toString().padStart(2, '0');\n    }\n    return timeString;\n  }\n\n  // Based on polynomial regression of men's and women's world record times.\n  // The best fit is mostly a 2nd-degree curve, but with tail at shorter \n  // distances necessitating a 3rd degree polynomial. \n  bestTime(distance) {\n    return -19.964 + 0.152*distance \n      + 0.0000009098*(distance**2) - 9.556E-12*(distance**3)\n  }\n\n  // Essentially a raw age-grade type score against the reference\n  // predicted time (based on world record)\n  gradeFactor() {\n    return this.time / this.bestTime(this.distance)\n  }\n\n  // Use this race to predict the time for another race\n  predictTime(race) {\n    const time = this.bestTime(race.distance) * this.gradeFactor()\n\n    // Weight is ratio of race distances diminishing predictive value \n    // as distances get further apart. \n    let ratio = race.distance / this.distance;\n    if (ratio > 1.0) {\n      ratio = 1 / ratio;\n    }\n    let weight = ratio;  \n    return [time, weight];\n  }\n}","import { Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { Form, useForm } from '../../components/useForm';\nimport Controls from '../../controls/Controls';\nimport * as distanceCalc from '../../calc/distance'\nimport Race from '../../calc/Race'\n\n// Parsing and validation for the form fields. Regex should match blank\n// if value is optional. \n// EYE - can we pass the whole thing to useForm and move validate there?\nconst FIELD = {\n  'id': {\n    pattern: RegExp(/(.*)/),\n    help: '',\n    initVal: 0,\n  },\n  'distance': {\n    pattern: RegExp(/^\\s*(\\d+)\\s*$/),\n    help: 'Select a distance',\n    initVal: '',\n  },\n  'hhmmss': {\n    pattern: RegExp(/^\\s*(\\d+):?([0-5]\\d{1}?)(:([0-5]\\d{1}))?\\s*$/),\n    help: 'hh:mm:ss or hh:mm or mm:ss',\n    initVal: '',\n  },\n  'altitude': {\n    pattern: RegExp(/\\s*(\\d+)\\s*$/),\n    help: 'Race altitude (ft)',\n    initVal: 0,\n  }\n}\n\n// EYE - Could also change useForm() to expect the FIELD format\nlet initialFValues = {}\nObject.keys(FIELD).forEach((key) => {\n  initialFValues[key] = FIELD[key].initVal\n})\n\nfunction AddRaceForm(props) {\n  const { addOrEdit, recordForEdit } = props;\n\n  // Validate is called on each key stroke for the current field \n  // being edited. For onSubmit, ALL of the fields are included\n  const validate = (fieldValues=values) => {\n    let temp = {...errors};\n\n    Object.keys(fieldValues).forEach((key) => {\n      const check = FIELD[key]\n      if (check) {\n        temp[key] = check.pattern.test(fieldValues[key]) ? '' : check.help;\n      }\n    })\n    setErrors({ ...temp });   // Updates only the set key=value pairs\n\n    if (fieldValues === values) {\n      // Ignore initial blank state\n      return Object.values(temp).every(x => x === \"\")\n    }\n    else {\n      return false\n    }\n  }\n\n  // useForm returns our values and errors objects along with the\n  // hooks to set them.\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate)\n\n  const parseFormToRace = () => {\n    let parsedTime = FIELD.hhmmss.pattern.exec(values.hhmmss);\n    let timeParts = [];\n    timeParts.push(parseInt(parsedTime[1]));\n    timeParts.push(parseInt(parsedTime[2]));\n\n    // Optional last part (ss or mm) is in offset 4 of regex\n    if (parsedTime[4] != null) {\n      timeParts.push(parseInt(parsedTime[4]));\n    }\n\n    // Finally define the race object\n    let race = new Race({\n      id: values.id,\n      distance: parseInt(values.distance), \n      altitude: parseInt(values.altitude), \n      timeParts: timeParts,\n    })\n    return race\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    if (validate()) {\n      const race = parseFormToRace()\n      addOrEdit(race, resetForm)\n    }\n  }\n\n  // useEffect() hook is called after render\n  useEffect(() => {\n      if (recordForEdit != null) {\n        setValues({...recordForEdit})\n      }\n    }, [recordForEdit]\n  )\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Controls.Select\n            label=\"Distance\"\n            name=\"distance\"\n            value={values.distance}\n            onChange={handleInputChange}\n            options={distanceCalc.getSelectOptions()}\n            error={errors.distance}\n          />\n          <Controls.Input\n            label=\"Finish Time\"\n            name=\"hhmmss\"\n            onChange={handleInputChange}\n            value={values.hhmmss}\n            error={errors.hhmmss}\n          />\n          <Controls.Input\n            label=\"Altitude\"\n            name=\"altitude\"\n            onChange={handleInputChange}\n            value={values.altitude}\n            error={errors.altitude}\n          />\n          <div>\n            <Controls.Button\n              text=\"Save\"\n              type=\"submit\"\n            />\n            <Controls.Button\n              text=\"Reset\"\n              color=\"default\"\n              onClick={resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n\nexport default AddRaceForm;","import { makeStyles, Table, TableCell, TableHead, TablePagination, \n  TableRow, TableSortLabel } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    marginTop: theme.spacing(1),\n    '& thead th': {\n      fontWeight:  '600',\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.primary.light,\n      textAlign: 'left',\n    },\n    '& tbody td': {\n      fontWeight: '400',\n      padding: theme.spacing(1),\n      textAlign: 'left',\n    },\n    '& tbody tr:hover': {\n      backgroundColor: '#fffbf2',\n      cursor: 'pointer',\n    },\n  },\n}))\n\n// Generic table containing records (rows) and headCells (columns)\nfunction useTable(records, headCells, filterFn) {\n  const classes = useStyles()\n\n  // Add hooks for paging\n  const pages = [5, 10, 25]\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]) \n  const [order, setOrder] = useState()\n  const [orderBy, setOrderBy] = useState()\n\n  // Or build from records?\n  const TblContainer = props => (\n    <Table className={classes.table}>\n      {props.children}\n    </Table>\n  )\n\n  const handleSortRequest = cellId => {\n    // Set direction based on whether we are already sorting on this column\n    // and if the direction is already asc or not\n    const isAsc = orderBy === cellId && order === \"asc\"\n    setOrder(isAsc ? \"desc\" : \"asc\")\n    setOrderBy(cellId)\n  }\n\n  // EYE - or no props?\n  const TblHead = props => (\n    <TableHead>\n      <TableRow>\n        {\n          headCells.map(f => (\n            <TableCell key={f.id}\n              sortDirection = {f.id === orderBy ? order : false}\n            >\n              {\n                f.disableSort ? f.label : \n                  <TableSortLabel \n                    active = {f.id === orderBy}\n                    direction = {f.id === orderBy ? order : \"asc\"}\n                    onClick={() => {handleSortRequest(f.id)}}\n                  >\n                    {f.label}\n                  </TableSortLabel>\n              }\n            </TableCell> \n          ))\n        }\n      </TableRow>\n    </TableHead>\n  )\n\n  // Paging controls (use values from hooks above)\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const TblPagination = () => (\n    <TablePagination\n      component=\"div\"\n      page={page}\n      rowsPerPageOptions={pages}\n      rowsPerPage={rowsPerPage}\n      count={records.length}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n    />\n  )\n\n  // Apparently lifted from MUI documentation\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index])\n    stabilizedThis.sort((a,b) => {\n      const order = comparator(a[0], b[0])\n      if (order !== 0) {\n        return order;\n      }\n      else {\n        return a[1] - b[1];\n      }\n    })\n    return stabilizedThis.map((el) => el[0])\n  }\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  const recordsAfterPagingAndSorting = () => {\n    return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n      .slice(page * rowsPerPage, (page+1) * rowsPerPage);\n  }\n\n  // Returning an object containing TblContainer\n  return {\n    TblHead,\n    TblContainer, \n    TblPagination, \n    recordsAfterPagingAndSorting\n  }\n}\n\nexport default useTable;","import Race from '../calc/Race'\n\nconst KEYS = {\n  pastRaces: \"pastRaces\",\n  distance: \"distance\",\n  time: \"time\",\n  id: \"id\",\n}\n\nfunction generateId() {\n  // Base on time of day as u8 epoch time\n  return Date.now()\n}\n\nexport function getPastRaces() {\n  let pastRaces = localStorage.getItem(KEYS.pastRaces)\n  if (pastRaces == null || pastRaces.length === 0) {\n    pastRaces = JSON.stringify([])\n    localStorage.setItem(KEYS.pastRaces, pastRaces)\n  }\n\n  // Convert raw json/obj to Race class instance\n  let rawData = JSON.parse(pastRaces)\n  let results = []\n  rawData.forEach(row => {\n    results.push(new Race(row))\n  })\n  //return JSON.parse(pastRaces)\n  return results\n}\n\nexport function insertPastRace(data) {\n  let pastRaces = getPastRaces()\n  data[KEYS.id] = generateId()\n  pastRaces.push(data)\n  localStorage.setItem(KEYS.pastRaces, JSON.stringify(pastRaces))\n}\n\nexport function updatePastRace(data) {\n  let pastRaces = getPastRaces()\n  let idx = pastRaces.findIndex(x => x.id === data.id)\n  pastRaces[idx] = {...data}\n  localStorage.setItem(KEYS.pastRaces, JSON.stringify(pastRaces))\n}\n\nexport function deletePastRace(id) {\n  let pastRaces = getPastRaces()\n  pastRaces = pastRaces.filter(x => x.id !== id)\n  localStorage.setItem(KEYS.pastRaces, JSON.stringify(pastRaces))\n}","import { Fab, Paper, TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { AddOutlined, EditOutlined } from '@material-ui/icons';\nimport React, {useState} from 'react';\nimport Popup from '../../components/Popup'\nimport Notification from '../../components/Notification'\nimport AddRaceForm from './AddRaceForm';\nimport { contentStyles } from '../../components/Content'\nimport useTable from '../../components/useTable'\nimport * as historyService from '../../services/pastRaces'\nimport Controls from '../../controls/Controls';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction History(props) {\n  const classes = contentStyles()\n  const [records, setRecords] = useState(historyService.getPastRaces())\n  const [recordForEdit, setRecordForEdit] = useState(null)\n  const [filterFn, setFilterFn] = useState({fn: items => { return items }})\n  const [notify, setNotify] = useState({\n    isOpen:false, message:'', type:''\n  })\n\n  // Open popup automatically if no records\n  const [openPopup, setOpenPopup] = useState(records.length === 0)   \n\n  const addOrEdit = (race, resetForm) => {\n    // ID is 0 on new record until it is inserted\n    if (race.id == null || race.id === 0) {\n      historyService.insertPastRace(race)\n    }\n    else {\n      historyService.updatePastRace(race)\n    }\n\n    setRecordForEdit(null)\n    resetForm()\n    setOpenPopup(false)\n    setRecords(historyService.getPastRaces())\n\n    setNotify({\n      isOpen: true,\n      type: 'success',\n      message: 'Saved Successfully!',\n    })\n  }\n\n  const openInPopup = item => {\n    setRecordForEdit(item)\n    setOpenPopup(true)\n  }\n\n  const headerCells = [\n    {id:'distance', label:'Distance', disableSort:true},\n    {id:'time', label:'Time', disableSort:true},\n    {id:'altitude', label:'Altitude', disableSort:true},\n    {disableSort:true} \n  ]\n\n  // This brings the Tbl types into our name space\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headerCells, filterFn)\n\n  const onDelete = id => {\n    historyService.deletePastRace(id)\n    setRecords(historyService.getPastRaces())\n    setNotify({\n      isOpen: true,\n      type: 'error',\n      message: 'Deleted Race!',\n    })\n  }\n\n  return (\n    <div>\n      {addButton(classes, setOpenPopup)}\n      <Paper className={classes.pageContent}>\n        <TblContainer>\n          <TblHead />\n          <TableBody>\n          {\n            // No paging/sorting needed. Without pagination it just \n            // truncates the data\n            //recordsAfterPagingAndSorting().map(\n            records.map(\n              (item) => (\n                <TableRow key={item.id}>\n                  <TableCell> {item.distanceName} </TableCell>\n                  <TableCell> {item.hhmmss} </TableCell>\n                  <TableCell> {item.altitude} </TableCell>\n                  <TableCell>\n                    <Controls.ActionButton color=\"primary\" fontSize=\"small\"\n                      onClick={() => { openInPopup(item) }}\n                    >\n                      <EditOutlined/>\n                    </Controls.ActionButton>\n                    <Controls.ActionButton color=\"secondary\" fontSize=\"small\"\n                      onClick={() => { onDelete(item.id) }}\n                    >\n                      <CloseIcon />\n                    </Controls.ActionButton>\n                  </TableCell>\n                </TableRow>\n              )\n            )\n          }\n          </TableBody>\n        </TblContainer>\n      </Paper>\n      <Popup\n        title=\"Past Race\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <AddRaceForm \n          addOrEdit={addOrEdit}\n          recordForEdit={recordForEdit}\n        />\n      </Popup>\n      <Notification\n        notify={notify}\n        setNotify={setNotify}\n      />\n    </div>\n  )\n}\n\nconst addButton = (classes, setOpenPopup) => (\n  <Fab variant=\"extended\" aria-label=\"Add Race\" color=\"secondary\"\n    className={classes.fabButton}\n    onClick={() => { setOpenPopup(true) }}\n  >\n    <AddOutlined />\n    Add Race\n  </Fab>\n)\n\nexport default History;","import * as distanceCalc from './distance'\nimport * as historyService from '../services/pastRaces'\nimport Race from './Race'\n\n// Return array of race distances with prediction values\nexport function getRacePredictions() {\n  // Iterate by target race\n  let targetRaces = []\n\n  distanceCalc.getDistances().forEach(target => {\n    // Iterate past races\n    let totalTime = 0.0\n    let totalWeight = 0.0\n    historyService.getPastRaces().forEach(pastRace => {\n      const [time, weight] = pastRace.predictTime(\n        // EYE - Can update target race with altitude/age/etc.\n        // based on whatever the scenario is set to\n        new Race({distance: target.distance})\n      )\n      totalTime += time * weight\n      totalWeight += weight\n    })\n    if (totalWeight > 0.0) {\n      let targetRace = new Race({\n        time: totalTime/totalWeight,\n        distance: target.distance,\n      })\n      targetRaces.push(targetRace)\n    }\n  })\n  return targetRaces\n}","import React, { useState } from 'react';\nimport { Paper, TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { contentStyles } from '../../components/Content'\nimport useTable from '../../components/useTable'\nimport * as predictCalc from '../../calc/predict'\n\nfunction RacePredictions(props) {\n  const classes = contentStyles()\n  const [filterFn, setFilterFn] = useState({fn: items => { return items }})\n  const [records, setRecords] = useState(predictCalc.getRacePredictions())\n\n  const headerCells = [\n    {id:'distance', label:'Distance', disableSort:true},\n    {id:'time', label:'Time', disableSort:true},\n    {id:'pace', label:'Pace', disableSort:true},\n  ]\n\n  // This brings the Tbl types into our name space\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headerCells, filterFn)\n\n  return (\n    <div>\n      <Paper className={classes.pageContent}>\n        <TblContainer>\n          <TblHead />\n          <TableBody>\n          {\n            records.map(\n              (item) => (\n                <TableRow key={item.id}>\n                  <TableCell> {item.distanceName} </TableCell>\n                  <TableCell> {item.hhmmss} </TableCell>\n                  <TableCell> {item.getPaceString()} </TableCell>\n                </TableRow>\n              )\n            )\n          }\n          </TableBody>\n        </TblContainer>\n      </Paper>\n    </div>\n  )\n}\n\nexport default RacePredictions;","import React from 'react';\nimport {Paper} from '@material-ui/core';\nimport {contentStyles} from '../../components/Content'\n\nfunction Help(props) {\n  const classes = contentStyles()\n\n  return (\n    <div>\n      <Paper className={classes.pageContent}>\n        <div> TBD Help Content </div>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Help;","import React, {useState} from 'react'\nimport {createMuiTheme, CssBaseline, ThemeProvider, withStyles} \n  from '@material-ui/core'\nimport { PermIdentityOutlined, HistoryOutlined, DirectionsRunOutlined, \n  ShowChartOutlined, \n  HelpOutlineRounded} from '@material-ui/icons'\n\nimport Content from '../components/Content'\nimport Footer from '../components/Footer'\nimport UserProfile from '../pages/user_profile/UserProfile'\nimport History from '../pages/history/History'\nimport RacePredictions from '../pages/predict/RacePredictions'\nimport Help from '../pages/help/Help'\n\n// We can create theme objects like below, and save them in a \n// map, and allow user to set the theme programatically\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#333996',\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: '#f83245',\n      light: '#f8324526'\n    },\n    background: {\n      default: '#f4f5fd',\n    },\n  },\n  shape: {\n    borderRadius: '4px',\n  },\n\n  // Overrides default MUI behavior for the app. See MUI API docs\n  // for each component to see what you can do.\n  overrides: {\n    MuiAppBar: {\n      root:{\n        transform: 'translateZ(0)',\n      }\n    }\n  },\n  props: {\n    // Sets ripple property for child components\n    MuiIconButton: {\n      disableRipple: false,\n    }\n  }\n});\n\n// Main application styling\nconst styles = {\n  appMain: {\n    paddingLeft: '0px',\n    width: '100%',\n  }\n}\n\n// Define list of pages \nconst pages = [\n  { \n    title: \"Profile\", \n    longTitle: \"User Profile\", \n    page: (<UserProfile />),\n    icon: (<PermIdentityOutlined color=\"primary\" />) \n  },\n  { \n    title: \"History\", \n    longTitle: \"Race History\", \n    page: (<History />),\n    icon: (<HistoryOutlined color=\"primary\" />)\n  },\n  { \n    title: \"Predict\", \n    longTitle: \"Race Predictions\", \n    page: (<RacePredictions />),\n    icon: (<DirectionsRunOutlined color=\"primary\" />) \n  },\n  { \n    title: \"Help\", \n    longTitle: \"Help\", \n    page: (<Help />),\n    icon: (<HelpOutlineRounded color=\"secondary\" />) \n  },\n]\n\nconst App = (props) => {\n  const {classes} = props;\n\n  // Defaulting to History page, but should encourage profile\n  // if no cache data found\n  const [currentPage, setCurrentPage] = useState(pages[1].title)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.appMain}> \n        <Content pages={pages} currentPage={currentPage}/>\n        <Footer pages={pages} setCurrentPage={setCurrentPage}/> \n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default withStyles(styles)(App);","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// NOTE!!! Material-UI classes don't work with: import { App }\nimport App from './app/App'\n//import './index.css'\n\n// ===================================\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}